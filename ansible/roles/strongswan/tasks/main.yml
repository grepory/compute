---
- name: generate secrets file and upload to encrypted storage via s3kms
  shell: echo '{{ lookup('template', 'ipsec.secrets.j2') }}' | /opt/bin/s3kms put -b opsee-keys -o dev/ipsec-{{region}}.secrets -k alias/vinz-dev

- name: generate config file and upload to encrypted storage via s3kms
  shell: echo '{{ lookup('template', 'ipsec.conf.j2') }}' | /opt/bin/s3kms put -b opsee-keys -o dev/ipsec-{{region}}.conf -k alias/vinz-dev

- name: keypair for strongswan
  ec2_key:
    name: "{{strongswan_keypair}}"
    region: "{{region}}"
    state: present
    wait: yes

- name: strongswan security group
  ec2_group:
    description: "strongswan security group for {{region}}"
    name: "{{strongswan_security_group}}"
    region: "{{region}}"
    state: present
    vpc_id: "{{vpc_id}}"
    rules:
      - proto: udp
        from_port: 500
        to_port: 500
        cidr_ip: 0.0.0.0/0
      - proto: udp
        from_port: 4500
        to_port: 4500
        cidr_ip: 0.0.0.0/0

- name: coreos strongswan node
  ec2:
    vpc_subnet_id: "{{strongswan_instance_subnet_id}}"
    user_data: "{{ lookup('template', 'vpn.cloud-config.j2') }}"
    assign_public_ip: no
    source_dest_check: no
    instance_profile_name: "{{strongswan_instance_profile}}"
    instance_tags:
      Name: "StrongSwan gateway {{region}}"
    count_tag:
      Name: "StrongSwan gateway {{region}}"
    exact_count: 1
    group: "{{strongswan_security_group}}"
    image: "{{coreos_ami}}"
    instance_type: "{{strongswan_instance_type}}"
    key_name: "{{strongswan_keypair}}"
    region: "{{region}}"
    private_ip: "{{strongswan_gateway_ip}}"
  register: node_result

- debug:
   var: node_result.tagged_instances[0].id

- name: elastic ip for strongswan
  ec2_eip:
    public_ip: "{{strongswan_public_ip}}"
    device_id: "{{node_result.tagged_instances[0].id}}"
    in_vpc: yes
    region: "{{region}}"
    state: present

- name: route traffic to vpn
  ec2_vpc_route_table:
    region: "{{region}}"
    route_table_id: "{{route_table_id}}"
    vpc_id: "{{vpc_id}}"
    lookup: id
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{internet_gateway_id}}"
      - dest: "{{strongswan_client_subnet}}"
        instance_id: "{{node_result.tagged_instances[0].id}}"
    state: present
